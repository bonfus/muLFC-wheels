environment:
  pypi:
    secure: K8NosHHZoxXipq2lfcNR2Q==
  global:
    REPO_DIR: muLFC
    PACKAGE_NAME: muLFC
    BUILD_COMMIT: dcdf3f6a4734005bc3c18f464a3135d965763546

    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C %APPVEYOR_BUILD_FOLDER%\\multibuild\\ci\\appveyor\\windows_sdk.cmd"

  matrix:
    - PYTHON: "C:\\Miniconda"
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "32"
      BUILD_DEPENDS: "numpy==1.8.0"
      TEST_DEPENDS: "numpy==1.8.0"
    - PYTHON: "C:\\Miniconda-x64"
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "64"
      BUILD_DEPENDS: "numpy==1.8.0"
      TEST_DEPENDS: "numpy==1.8.0"
#    - PYTHON: "C:\\Miniconda3"
#      PYTHON_VERSION: "3.4"
#      PYTHON_ARCH: "32"
#      BUILD_DEPENDS: "numpy==1.9.0"
#      TEST_DEPENDS: "numpy==1.9.0"
#    - PYTHON: "C:\\Miniconda3-x64"
#      PYTHON_VERSION: "3.4"
#      PYTHON_ARCH: "64"
#      BUILD_DEPENDS: "numpy==1.9.0"
#      TEST_DEPENDS: "numpy==1.9.0"
    - PYTHON: "C:\\Miniconda35"
      PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "32"
      BUILD_DEPENDS: "numpy==1.10.1"
      TEST_DEPENDS: "numpy==1.10.1"
    - PYTHON: "C:\\Miniconda35-x64"
      PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "64"
      BUILD_DEPENDS: "numpy==1.10.1"
      TEST_DEPENDS: "numpy==1.10.1"
    - PYTHON: "C:\\Miniconda36"
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "32"
      BUILD_DEPENDS: "numpy==1.12.0"
      TEST_DEPENDS: "numpy==1.12.0"
    - PYTHON: "C:\\Miniconda36-x64"
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "64"
      BUILD_DEPENDS: "numpy==1.12.0"
      TEST_DEPENDS: "numpy==1.12.0"


# We always use a 64-bit machine, but can build x86 distributions
# with the TARGET_ARCH variable.
platform:
    - x64

matrix:
    fast_finish: true

install:
    # Fetch submodules
    - git submodule update --init --recursive

    # Install miniconda
    - ps: .\\multibuild\\ci\\appveyor\\install.ps1
    - SET PATH=%PYTHON%;%PYTHON%\Scripts;%PYTHON%\Library\bin;%PATH%
    - conda info

    # Check that we have the expected version and architecture for Python
    - python --version
    - python -c "import struct; print(struct.calcsize('P') * 8)"

build_script:
    # Install build requirements
    - conda install --yes %BUILD_DEPENDS%

    # build wheel:
    - cd %REPO_DIR%
    - git checkout %BUILD_COMMIT%
    - "%CMD_IN_ENV% python setup.py bdist_wininst"
    - "%CMD_IN_ENV% python setup.py bdist_msi"
    - "%CMD_IN_ENV% python setup.py bdist_wheel"
    - ls dist/

artifacts:
    - path: "%REPO_DIR%\\dist\\*"

test_script:
    - cmd: "%CMD_IN_ENV% python setup.py test"

on_success:
    - conda install --yes -c conda-forge twine
    - cmd: "echo [pypi] > %USERPROFILE%\\.pypirc"
    - cmd: "echo repository=https://test.pypi.org/legacy/ >> %USERPROFILE%\\.pypirc"
    - cmd: "echo username: pietro.bonfa >> %USERPROFILE%\\.pypirc"
    - cmd: "echo password: %pypi% >> %USERPROFILE%\\.pypirc"
    - "%CMD_IN_ENV% twine upload dist\\*.whl"
